name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        version-type: strict
        version-file: .tool-versions

    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Set up Postgres
      run: |
        docker-compose -f docker-compose.dbs.yml up -d
        retries=30
        until docker exec -i walex-db psql -U postgres -c "SELECT 1;" &>/dev/null; do
          sleep 2
          retries=$((retries - 1))
          if [ "$retries" -eq 0 ]; then
            echo "PostgreSQL did not start in time."
            exit 1
          fi
        done
        docker exec -i walex-db psql -U postgres -c "CREATE DATABASE todos_test;"
      env:
        POSTGRES_DB: todos_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

    - name: Set up test data
      run: mix set_up_test_database

    - name: Check warnings
      run: |
        mix compile --warnings-as-errors

    - name: Run tests
      run: |
        mix test --exclude skip_ci

    - name: Check code quality, security and format
      run: |
        mix quality --strict
